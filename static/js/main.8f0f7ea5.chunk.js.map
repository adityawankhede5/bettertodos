{"version":3,"sources":["components/TaskManager/NewTask.js","components/TaskManager/DueTasks.js","components/TaskManager/CompletedTasks.js","components/TaskManager/TaskManager.js","App.js","reportWebVitals.js","index.js"],"names":["NewTask","insertTask","useState","isOpen","setIsOpen","deadlineOption","setDeadlineOption","title","setTitle","desc","setDesc","deadlineDate","setDeadlineDate","deadlineTime","setDeadlineTime","errorMsg","setErrorMsg","resetNewTask","size","lg","className","onClick","e","preventDefault","onSubmit","type","placeholder","value","onChange","target","color","deadline","Date","setHours","getHours","split","hrs","min","year","month","day","setFullYear","task","toJSON","isDue","doneAt","style","fontSize","Task","i","deleteTask","completeTask","showOptions","setShowOptions","dateString","toDateString","timeString","toLocaleTimeString","t","position","right","width","height","viewBox","fill","xmlns","d","display","DueTasks","tasks","map","doneAtDateString","doneAtTimeString","filled","opacity","CompletedTasks","TaskManger","setTasks","id","updatedTasks","filter","localStorage","setItem","JSON","stringify","useEffect","getItem","localTasks","parse","breakpoint","exact","path","slice","push","App","isSidebarOpen","setIsSidebarOpen","withNavbar","withSidebar","sidebarType","toggle","withTransitions","basename","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f0f7ea5.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Alert, Button, Col, Collapse, CollapseContent, CollapseHeader, Form, FormGroup, FormText, Input, Row, TextArea } from \"reacthalfmoon\";\n\n\nfunction NewTask({insertTask}) {\n    \n    const [isOpen, setIsOpen] = useState(false);\n    const [deadlineOption, setDeadlineOption] = useState(0);\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [deadlineDate, setDeadlineDate] = useState(\"\");\n    const [deadlineTime, setDeadlineTime] = useState(\"\");\n    const [errorMsg, setErrorMsg] = useState(\"\");\n\n    const addTask = () => {\n        setErrorMsg(\"\");\n        if (title === \"\" && desc === \"\") {\n            setErrorMsg(\"Must provide a title or a description\")\n            return;\n        }\n        const deadline = new Date();\n        if (deadlineOption === 0) {\n            deadline.setHours(23, 59, 59, 999);\n        } else if (deadlineOption === 1) {\n            deadline.setHours(deadline.getHours() + 24);\n        } else if (deadlineOption === 2) {\n            if(deadlineTime === \"\"){\n                setErrorMsg(\"Must provide a time.\")\n                return;\n            }\n            const [hrs, min] = deadlineTime.split(\":\");\n            deadline.setHours(hrs, min, 0, 0);\n        } else {\n            if(deadlineDate === \"\"){\n                setErrorMsg(\"Must provide a date.\")\n                return;\n            }\n            if(deadlineTime === \"\"){\n                setErrorMsg(\"Must provide a time.\")\n                return;\n            }\n            const [year, month, day] = deadlineDate.split(\"-\");\n            const [hrs, min] = deadlineTime.split(\":\");\n            deadline.setFullYear(year, month, day);\n            deadline.setHours(hrs, min, 0, 0);\n        }\n        const task = {\n            title: title,\n            desc: desc,\n            deadline: deadline.toJSON(),\n            isDue: true,\n            doneAt: null\n        }\n        insertTask(task);\n        resetNewTask();\n        setIsOpen(false);\n    }\n\n    const resetNewTask = () => {\n        setTitle(\"\");\n        setDesc(\"\");\n        setDeadlineOption(0);\n        setDeadlineTime(\"\");\n        setDeadlineDate(\"\");\n        setErrorMsg(\"\");\n    }\n\n    return (\n        <>\n            {/* FORM */}\n            <Col size={12} lg={6} className=\"p-5\">\n                <Collapse isOpen={isOpen}>\n                    <CollapseHeader onClick={(e) => { setIsOpen(!isOpen); e.preventDefault() }}>Create Task</CollapseHeader>\n                    <CollapseContent>\n                        <Form onSubmit={(e) => {e.preventDefault()}}>\n                            <FormGroup>\n                                <Input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => { setTitle(e.target.value) }} />\n                            </FormGroup>\n                            <FormGroup>\n                                <TextArea placeholder=\"Description about the task\" value={desc} onChange={(e) => { setDesc(e.target.value) }} />\n                            </FormGroup>\n                            <FormGroup>\n                                <label>Should be done by</label>\n                                <Row className=\"m-5\">\n                                    <Col onClick={() => { setDeadlineOption(0) }} className={`deadline-option ${deadlineOption === 0 ? 'deadline-option-selected' : ''}`}>Today</Col>\n                                    <Col onClick={() => { setDeadlineOption(1) }} className={`deadline-option ${deadlineOption === 1 ? 'deadline-option-selected' : ''}`}>24 Hrs</Col>\n                                    <Col onClick={() => { setDeadlineOption(2) }} className={`deadline-option ${deadlineOption === 2 ? 'deadline-option-selected' : ''}`}>Time</Col>\n                                    <Col onClick={() => { setDeadlineOption(3) }} className={`deadline-option ${deadlineOption === 3 ? 'deadline-option-selected' : ''}`}>Date</Col>\n                                </Row>\n                                <Row className=\"m-5\">\n                                    {deadlineOption === 3 ?\n                                        <Col className=\"mr-5\"><Input type=\"date\" value={deadlineDate} onChange={(e) => { setDeadlineDate(e.target.value) }} /></Col>\n                                        :\n                                        ''}\n                                    {deadlineOption === 2 || deadlineOption === 3 ?\n                                        <Col><Input type=\"time\" value={deadlineTime} onChange={(e) => { setDeadlineTime(e.target.value) }} /></Col>\n                                        :\n                                        ''}\n                                </Row>\n                                <FormText>{errorMsg}</FormText>\n                            </FormGroup>\n                            <FormGroup className=\"d-flex justify-content-end\">\n                                <Button onClick={resetNewTask} className=\"m-5\" color=\"danger\">Reset</Button>\n                                <Button onClick={addTask} className=\"m-5\" color=\"primary\">Submit</Button>\n                            </FormGroup>\n                        </Form>\n                    </CollapseContent>\n                </Collapse>\n            </Col>\n\n            {/* DISPLAY */}\n            <Col size={12} lg={6} className=\"p-5\">\n            {isOpen ?\n            <Alert>\n                <strong style={{fontSize: '1.2em'}}>{title}</strong>\n                <div>{desc}</div>\n                \n            </Alert>\n            :\n            \"\"\n            }\n            </Col>\n        </>\n    )\n}\n\nexport default NewTask;","import { useState } from \"react\";\nimport { Alert, Button, Col } from \"reacthalfmoon\";\n\nfunction Task({task, i, deleteTask, completeTask}){\n\n    const [showOptions, setShowOptions] = useState(false);\n    if(!task.isDue) return <></> \n    const deadline = new Date(task.deadline);\n    const dateString = deadline.toDateString();\n    const timeString = deadline.toLocaleTimeString();\n    let color = \"primary\";\n    const t = new Date();\n    if(t>deadline) color = \"danger\";\n    else if(t<deadline){\n        t.setHours(t.getHours() + 1);\n        if(t>=deadline) color=\"secondary\"\n    } \n\n    return <Col size={12} lg={6} className=\"p-5\" key={task.deadline + i}> \n    <Alert color={color}>\n\n        <span style={{position: 'absolute', right: '10px'}} onClick={() => {setShowOptions(!showOptions)}}>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z\" fill=\"black\" /><path d=\"M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z\" fill=\"black\" /><path d=\"M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z\" fill=\"black\" /></svg>\n        </span>\n\n        <strong style={{fontSize: '1.2em'}}>{task.title}</strong>\n\n        <div style={{color:\"gray\", fontSize: '0.9em'}}>{dateString + \", \" + timeString}</div>\n        {task.desc}\n\n        <div style={showOptions ? {} : {display: 'none'}}>\n            <Button size=\"sm\" color=\"success\" onClick={() => {completeTask(i)}}>Done</Button>{\" \"}\n            <Button size=\"sm\" color=\"danger\" onClick={() => {deleteTask(i)}}>Delete</Button>\n        </div>\n\n    </Alert>\n    </Col>\n\n}\n\nfunction DueTasks({tasks, deleteTask, completeTask}) {\n    return tasks.map((task, i) => { return <Task task={task} i={i} deleteTask={deleteTask} completeTask={completeTask} key={task.deadline + i} />})\n}\nexport default DueTasks;","import { useState } from \"react\";\nimport { Alert, Button, Col } from \"reacthalfmoon\";\n\nfunction Task({task, i, deleteTask}){\n\n    const [showOptions, setShowOptions] = useState(false);\n    if(task.isDue) return <></> \n    const deadline = new Date(task.deadline);\n    const dateString = deadline.toDateString();\n    const timeString = deadline.toLocaleTimeString(); \n\n    const doneAt = new Date(task.doneAt);\n    const doneAtDateString = doneAt.toDateString();\n    const doneAtTimeString = doneAt.toLocaleTimeString();\n\n    const color = deadline > doneAt ? \"success\" : \"danger\";\n    return <Col size={12} lg={6} className=\"p-5\" key={task.deadline + i}> \n    <Alert filled color={color}>\n\n        <span style={{position: 'absolute', right: '10px'}} onClick={() => {setShowOptions(!showOptions)}}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 6C14 7.10457 13.1046 8 12 8C10.8954 8 10 7.10457 10 6C10 4.89543 10.8954 4 12 4C13.1046 4 14 4.89543 14 6Z\" fill=\"black\" /><path d=\"M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z\" fill=\"black\" /><path d=\"M14 18C14 19.1046 13.1046 20 12 20C10.8954 20 10 19.1046 10 18C10 16.8954 10.8954 16 12 16C13.1046 16 14 16.8954 14 18Z\" fill=\"black\" /></svg>\n        </span>\n\n        <strong style={{fontSize: '1.2em'}}>{task.title}</strong>\n\n        <div style={{color:\"black\", opacity: '0.5', fontSize: '0.9em'}}>{dateString + \", \" + timeString} | {doneAtDateString + \", \" + doneAtTimeString}</div>\n        {task.desc}\n\n        <div style={showOptions ? {} : {display: 'none'}}>\n            <Button size=\"sm\" color=\"danger\" onClick={() => {deleteTask(i)}}>Delete</Button>\n        </div>\n\n    </Alert>\n    </Col>\n\n}\n\nfunction CompletedTasks({tasks, deleteTask}) {\n    return tasks.map((task, i) => { return <Task task={task} i={i} deleteTask={deleteTask} key={task.deadline + i} />})\n}\nexport default CompletedTasks;","import { useState, useEffect } from \"react\";\nimport {  Container, Content, Row } from \"reacthalfmoon\";\nimport { Route, Switch } from 'react-router-dom';\nimport NewTask from \"./NewTask\";\nimport DueTasks from \"./DueTasks\";\nimport CompletedTasks from \"./CompletedTasks\";\n\nfunction TaskManger() {\n    const [tasks, setTasks] = useState([]);\n    const insertTask = (t) => {\n        const updatedTasks = tasks.slice();\n        updatedTasks.push(t);\n        setTasks(updatedTasks);\n        localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n    const deleteTask = (id) => {\n        const updatedTasks = tasks.filter((task, i) => {return id!==i});\n        setTasks(updatedTasks);\n        localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n    const completeTask = (id) => {\n        const updatedTasks = tasks.slice();\n        updatedTasks[id].isDue = false;\n        updatedTasks[id].doneAt = new Date().toJSON();\n        setTasks(updatedTasks);\n        localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n    }\n\n    useEffect(() => {\n        if(localStorage.getItem(\"tasks\")){\n            const localTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n            setTasks(localTasks);\n        }else{\n            localStorage.setItem(\"tasks\", JSON.stringify([]));\n        }\n    }, []);\n\n    return (\n        <Container breakpoint=\"fluid\">\n            <Content>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Row>\n                        <NewTask insertTask={insertTask} />\n                    </Row>\n                    <Row>\n                        <DueTasks tasks={tasks} deleteTask={deleteTask} completeTask={completeTask} />\n                    </Row>\n                </Route>\n                <Route path=\"/done\">\n                    <Row>\n                        <CompletedTasks tasks={tasks} deleteTask={deleteTask} />\n                    </Row>\n                </Route>\n            </Switch>\n            </Content>\n        </Container>\n        \n    )\n}\n\nexport default TaskManger;","import './App.css';\nimport { Button, ContentWrapper, Navbar, NavbarBrand, NavbarContent, PageWrapper, Sidebar, SidebarBrand, SidebarItem, SidebarMenu } from 'reacthalfmoon';\nimport { useState } from 'react';\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\nimport TaskManger from './components/TaskManager/TaskManager';\nfunction App() {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  return (\n    <PageWrapper withNavbar withSidebar sidebarType=\"overlayed-sm-and-down\" isSidebarOpen={isSidebarOpen} toggle={() => {setIsSidebarOpen(!isSidebarOpen)}} withTransitions>\n      <Router basename=\"/bettertodos\">\n      <div className=\"sidebar-overlay\" onClick={()=>{setIsSidebarOpen(!isSidebarOpen)}}></div>\n      <Navbar>\n        <NavbarContent>\n          <Button onClick={()=>{setIsSidebarOpen(!isSidebarOpen)}}>Menu</Button>\n          <NavbarBrand>\n            Better To-dos\n          </NavbarBrand>\n        </NavbarContent>\n      </Navbar>\n      <Sidebar>\n        <SidebarMenu>\n          <SidebarBrand>\n          </SidebarBrand>\n        </SidebarMenu>\n        <SidebarItem><Link to=\"/\" onClick={()=>{setIsSidebarOpen(false)}}>Due Tasks</Link></SidebarItem>\n        <SidebarItem><Link to=\"/done\" onClick={()=>{setIsSidebarOpen(false)}}>Completed Tasks</Link></SidebarItem>\n      </Sidebar>\n      <ContentWrapper>\n        <TaskManger />\n      </ContentWrapper>\n      </Router>\n    </PageWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}